# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:





  build:

    strategy:
      matrix:
        include:
          - node-version: 20.x   # fastest, so run first, to error fast
            os: ubuntu-latest
          - node-version: 20.x   # slowest, so run next. sort by slowest from here to get earliest end through parallelism
            os: macos-latest
          - node-version: 20.x   # finish check big-3 on latest current
            os: windows-latest
          - node-version: 21.x   # check newest non-lts too
            os: ubuntu-latest
          - node-version: 21.x   # check newest non-lts too
            os: macos-latest
          - node-version: 21.x   # check newest non-lts too
            os: windows-latest

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm install && npm run build





  release:

    if: (github.event.pusher.name == github.event.repository.owner.name) && (github.ref == 'refs/heads/main')
    needs: [build]  # , verify-version-bump
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Export tag to envvars
      run: |
        export TAG=$(awk -F'"' '/"version": ".+"/{ print $4; exit; }' package.json)
        echo "TAG=$TAG" >> $GITHUB_ENV
        echo $TAG

    - name: Use Node.js 20.x
      uses: actions/setup-node@v1
      with:
        node-version: 20.x
        registry-url: https://registry.npmjs.org/

    - name: Push tags
      run: git push origin --tags

    - name: Create the release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.TAG }}
        release_name: ${{ env.TAG }}
        body_path: CHANGELOG.md

    - name: Publish to npm
      run: |
        npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.CSV_BY_RFC_PUBLISH_TOKEN }}
